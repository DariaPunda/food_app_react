{"ast":null,"code":"var _jsxFileName = \"/Users/d/my-app/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-content\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 12\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","updatedTotalAmount","price","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/d/my-app/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-content\";\n\nconst defaultCartState = {\n    items: [],\n        totalAmount: 0,\n}\n\nconst cartReducer = (state, action) => { \n    if (action.type === 'ADD') {\n\n        const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n        \n        const existingCartItem = state.items[existingCartItemIndex];\n\n        let updatedItems;\n\n        if (existingCartItem) {\n         const   updatedItem = {\n                ...existingCartItem,\n                amount: existingCartItem.amount + action.item.amount, \n            }\n            updatedItems = [...state.items];\n            updatedItems[existingCartItemIndex] = updatedItem;\n        } else {\n            updatedItems = state.items.concat(action.item);\n            \n        }\n\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n        \n        return {\n            items: updatedItems,\n            totalAmount:updatedTotalAmount,\n        }\n    }\n\n    return defaultCartState\n};\n\n\nconst CartProvider = props => {\n\n   const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n\n    const addItemToCartHandler = item => {\n        dispatchCartAction({type:'ADD', item:item})\n     };\n\n    const removeItemFromCartHandler = id => {\n         dispatchCartAction({type:'REMOVE', id:id})\n     };\n\n    const cartContext = {\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem: addItemToCartHandler,\n        removeItem: removeItemFromCartHandler,\n};\n\n\n    return <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n };\n\nexport default CartProvider"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACLC,WAAW,EAAE;AACrB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IAEvB,MAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAK,CAACO,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACI,IAAI,CAACC,EAAE,CAAC;IAEvF,MAAMC,gBAAgB,GAAGP,KAAK,CAACH,KAAK,CAACM,qBAAqB,CAAC;IAE3D,IAAIK,YAAY;IAEhB,IAAID,gBAAgB,EAAE;MACrB,MAAQE,WAAW,GAAG;QACf,GAAGF,gBAAgB;QACnBG,MAAM,EAAEH,gBAAgB,CAACG,MAAM,GAAGT,MAAM,CAACI,IAAI,CAACK;MAClD,CAAC;MACDF,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAK,CAAC;MAC/BW,YAAY,CAACL,qBAAqB,CAAC,GAAGM,WAAW;IACrD,CAAC,MAAM;MACHD,YAAY,GAAGR,KAAK,CAACH,KAAK,CAACc,MAAM,CAACV,MAAM,CAACI,IAAI,CAAC;IAElD;IAEA,MAAMO,kBAAkB,GAAGZ,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACI,IAAI,CAACQ,KAAK,GAAGZ,MAAM,CAACI,IAAI,CAACK,MAAM;IAErF,OAAO;MACHb,KAAK,EAAEW,YAAY;MACnBV,WAAW,EAACc;IAChB,CAAC;EACL;EAEA,OAAOhB,gBAAgB;AAC3B,CAAC;AAGD,MAAMkB,YAAY,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAE3B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAG1B,UAAU,CAACO,WAAW,EAAEH,gBAAgB,CAAC;EAGhF,MAAMuB,oBAAoB,GAAGd,IAAI,IAAI;IACjCa,kBAAkB,CAAC;MAAChB,IAAI,EAAC,KAAK;MAAEG,IAAI,EAACA;IAAI,CAAC,CAAC;EAC9C,CAAC;EAEF,MAAMe,yBAAyB,GAAGd,EAAE,IAAI;IACnCY,kBAAkB,CAAC;MAAChB,IAAI,EAAC,QAAQ;MAAEI,EAAE,EAACA;IAAE,CAAC,CAAC;EAC9C,CAAC;EAEF,MAAMe,WAAW,GAAG;IAChBxB,KAAK,EAAEoB,SAAS,CAACpB,KAAK;IACtBC,WAAW,EAAEmB,SAAS,CAACnB,WAAW;IAClCwB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EACpB,CAAC;EAGG,oBAAOzB,OAAA,CAACF,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EAC3CX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAC1B,CAAC;AAACd,EAAA,CAxBGF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA0BlB,eAAeA,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}